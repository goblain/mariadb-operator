package v1alpha1

import (
	"bytes"
	"fmt"
	"html/template"
)

const (
	mariaDBConfigTemplate string = `
# Config generated by mariadb-operator

[mysqld]
wsrep_on=ON
wsrep_provider=/usr/lib/galera/libgalera_smm.so
binlog_format=row
default_storage_engine=InnoDB
innodb_autoinc_lock_mode=2
wsrep_cluster_address = gcomm://{{range $key, $value := .WSREPEndpoints}}{{if $key}},{{end}}{{$value}}{{end}}
`
)

type MariaDBConfig struct {
	WSREPEndpoints []string
}

func (conf *MariaDBConfig) Render() (string, error) {
	tmpl, err := template.New("MariaDBConfigTemplate").Parse(mariaDBConfigTemplate)
	if err != nil {
		panic(err.Error())
	}
	buffer := bytes.NewBufferString("")
	err = tmpl.Execute(buffer, conf)
	if err != nil {
		return "", fmt.Errorf("Failed to render config template with provided values")
	}
	return buffer.String(), nil
}
